resources:
  repositories:
  - repository: self
    type: github

variables:
  TfxVersion: v0.7.x
  PublisherName: BastienPerdriau
  ExtensionName: AzureDevOps-Variables-Tools

name: $(ExtensionName)-$(MajorVersion).$(MinorVersion).$(PatchVersion)

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - .gitignore
    - README.md

pr:
- master

stages:
- stage: CI
  jobs:
  - job: Build
    pool:
      name: Hosted VS2017
    steps:
    - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@1
      displayName: 'Use Node CLI for Azure DevOps'
      inputs:
        version: $(TfxVersion)
        checkLatest: true

    - task: richardfennellBM.BM-VSTS-Versioning-Task.Version-JSONFile-Task.VersionJSONFile@2
      displayName: 'Version JSON File'
      inputs:
        recursion: false
        VersionNumber: '$(MajorVersion).$(MinorVersion).$(PatchVersion)'
        useBuildNumberDirectly: true
        FilenamePattern: 'vss-extension.json'

    - task: PowerShell@2
      displayName: 'Update tasks version'
      inputs:
        targetType: 'filePath'
        filePath: '$(Build.SourcesDirectory)/Build.ps1'

    - task: ms-devlabs.vsts-developer-tools-build-tasks.package-extension-build-task.PackageVSTSExtension@1
      displayName: 'Package Extension: $(ExtensionName)'
      inputs:
        outputPath: '$(Build.ArtifactStagingDirectory)/Build'

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifact: Build'
      inputs:
        artifactName: Build
        targetPath: '$(Build.ArtifactStagingDirectory)/Build'

    - task: BastienPerdriau.AzureDevOps-Variables-Tools.VariableDefinitionUpdateTask.VariableDefinitionUpdate@1
      displayName: 'Update PatchVersion value'
      inputs:
        variableName: 'PatchVersion'
        useValueFrom: 'pipelineDefinition'
        integerOperation: 'increment'
        step: '1'
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

- stage: CD_Master
  jobs: 
  - job: Deploy
    pool:
      name: Hosted VS2017
    steps:
    - task: DownloadPipelineArtifact@1
      displayName: 'Download Pipeline Artifact'
      inputs:
        artifactName: Build
        buildType: 'current'
        targetPath: '$(System.ArtifactsDirectory)'
        branchName: 'refs/heads/master'
        itemPattern: '**'

    - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@1
      displayName: 'Use Node CLI for Azure DevOps'
      inputs:
        version: $(TfxVersion)
        checkLatest: true

    - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishExtension@1
      displayName: 'Publish Extension'
      inputs:
        connectedServiceName: 'Azure DevOps Marketplace'
        fileType: vsix
        vsixFile: '$(System.ArtifactsDirectory)/$(PublisherName).$(ExtensionName)-*.vsix'
        updateTasksVersion: false
        extensionVisibility: private
        shareWith: $(shareWithOrganization)
        noWaitValidation: true

    - task: ms-devlabs.vsts-developer-tools-build-tasks.is-valid-extension-agent-build-task.Check Marketplace validation status.@1
      displayName: 'Check Marketplace validation status'
      inputs:
        connectedServiceName: 'Azure DevOps Marketplace'
        method: vsix
        vsixFile: '$(System.ArtifactsDirectory)/$(PublisherName).$(ExtensionName)-*.vsix'
  dependsOn: CI
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
